package gea.framework;

public enum Policies {
	// COMIENZO DE LAS POLICIES
	
	// DEFINIMOS LAS POLITICAS DE ACCESO /////////////////////////////////////////////////////////////////////////
	// LA FORMA DE DEFINIR UNA POLITICA DE ACCESO ES NOMBREDELCONTROLADOR
	// SI POR EJEMPLO EXISTE UN CONTROLADOR CON EL NOMBRE CONTROLLERTEST Y NECESITAMOS ASIGNAR UNA POLICIE
	// CON EL NOMBRE POLICIECONTROLLERTEST, LA POLICIE DEBERIA QUEDAR ASIGNADA COMO
	// CONTROLLERTEST("POLICIECONTROLLERTEST")
	// RECORDAR QUE LAS POLICIES PUEDEN EJECUTAR OPERACIONES DE VALIDACION PARA RESTRINGIR EL ACCESO A CIERTAS
	// OPERACIONES DENTRO DEL ENTORNO DE EJECUCION. LAS POLICIES SIEMPRE DEBEN TERMINAR EN ACCIONES LLAMADAS
	// AL CONTROLADOR DEL TIPO NEXT() O FORBIDDEN()
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	// POLICIES ASIGNADAS POR EL FRAMEWORK
	DEFAULT("AllPass"), //RUTA EN CASO DE NO EXISTIR POLICIE PARA LA PETICION ACTUAL
	// RUTAS ASIGNABLES
	CONTROLLERUSER("AllPass"),
	CONTROLLERREGIONES("AllPass"),
	CONTROLLERCLASIFICACION("AllPass"),
	CONTROLLERRANKING("AllPass"),
	CONTROLLERCOMUNAL("AllPass"),
	CONTROLLEROBRAS("AllPass"),
	CONTROLLERPROVINCIAL("AllPass"),
	CONTROLLERMERCADO("AllPass"),
	CONTROLLERVIDEOS("AllPass"),
	CONTROLLERFORMULARIO("AllPass"),
	CONTROLLERUTILS("AllPass"),
	CONTROLLERWFS("AllPass"),
	CONTROLLERMIDESO("AllPass");
	// RUTAS ASIGNADAS
	
	//DEFINICIONES INTERNAS DEL ROUTER !IMPORTANTE NO MODIFICAR
	private final String policie;
	//INICIALIZAMOS EL CONSTRUCTOR DEL ROUTER
	Policies(String pol){
		this.policie = pol;
	}
	//ESTABLECEMOS LOS METODOS DE ROUTER PARA  ENTRAER LA ACCION
	public String getPolicie() {
		return policie;
	}
	// FIN ROUTER
}
